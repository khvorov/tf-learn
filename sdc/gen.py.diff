diff --git a/sdc/utils.py b/sdc/utils.py
index 2bd0edc..52aa3cb 100644
--- a/sdc/utils.py
+++ b/sdc/utils.py
@@ -76,6 +76,16 @@ def augument(img, range_x=100, range_y=10):
     img = random_translate(img, range_x, range_y)
     return img
 
+def random_batch(batch_size, n_images):
+    perm = np.random.permutation(n_images)
+    i = 0
+
+    while i < n_images:
+        bs = np.min([batch_size, n_images - i])
+        idxs = perm[i:(i + bs)]
+        i += bs
+        yield idxs
+ 
 def batch_generator(data_dir, image_paths, steering_angles, batch_size, is_training):
     il = ImageLoader(data_dir, image_paths)
 
@@ -83,17 +93,13 @@ def batch_generator(data_dir, image_paths, steering_angles, batch_size, is_train
     steers = np.empty(batch_size)
 
     while True:
-        i = 0
-        for index in np.random.permutation(il.n_images):
-            steering_angle = steering_angles[index]
+        for k, j in enumerate(random_batch(batch_size, il.n_images)):
+            steering_angle = steering_angles[j]
             if is_training:
-                image, steering_angle = choose_image(il, index, steering_angle)
+                image, steering_angle = choose_image(il, j, steering_angle)
             else:
-                image = il.center[index]
-            images[i] = preprocess(image)
-            steers[i] = steering_angle
-            i += 1
-            if i == batch_size:
-                break
+                image = il.center[j]
+            images[k] = preprocess(image)
+            steers[k] = steering_angle
         yield images, steers
 
